---
- name: EPGStation base directories are created
  become: yes
  loop:
    - "{{ epg_base_dir }}"
    - "{{ epg_base_dir }}/config"
    - "{{ epg_base_dir }}/data"
    - "{{ epg_base_dir }}/logs"
    - "{{ epg_base_dir }}/thumbnail"
    - "{{ epg_base_dir }}/build"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ epg_user_uid }}"
    group: "{{ epg_user_gid }}"
    mode: 0755

- name: All configurations are up-to-date
  become: yes
  loop:
    - "config.yml.j2"
    - "epgUpdaterLogConfig.yml.j2"
    - "serviceLogConfig.yml.j2"
    - "operatorLogConfig.yml.j2"
  template:
    src: "{{ item }}"
    dest: "{{ epg_base_dir }}/config/{{ item | splitext | first }}"
    owner: "{{ epg_user_uid }}"
    group: "{{ epg_user_gid }}"
    mode: 0744
  notify:
    - Restart EPGStation container

- name: enc.js is downloaded
  when: epg_download_encjs
  become: yes
  loop:
    - src: "enc.js.template"
      dest: "enc.js"
  get_url:
    url: "https://{{ epg_repository | regex_replace('^github.com', 'raw.githubusercontent.com') }}/{{ epg_version }}/config/{{ item.src }}"
    dest: "{{ epg_base_dir }}/config/{{ item.dest }}"
    owner: "{{ epg_user_uid }}"
    group: "{{ epg_user_gid }}"
    mode: 0744

- name: Additional files are copied to config dir
  loop: "{{ epg_additional_files }}"
  when: epg_additional_files|length > 0
  copy:
    src: "{{ item }}"
    dest: "{{ epg_base_dir }}/config/"
    owner: "{{ epg_user_uid }}"
    group: "{{ epg_user_gid }}"
    mode: 0744

- name: EPGStation docker image is pulled
  become: yes
  docker_image:
    name: "{{ epg_image }}"
    tag: "{{ epg_version }}"
    source: pull

- when: epg_build_image_for_ffmpeg
  block:
    - name: Dockerfile for EPGStation image with ffmpeg is up-to-date
      become: yes
      template:
        src: "Dockerfile.j2"
        dest: "{{ epg_base_dir }}/build/Dockerfile"
        owner: "{{ epg_user_uid }}"
        group: "{{ epg_user_gid }}"
        mode: 0744

    - name: Get stat of Dockerfile
      become: yes
      stat:
        path: "{{ epg_base_dir }}/build/Dockerfile"
        checksum_algorithm: sha256
      register: epg_dockerfile

    - name: Update image name and its version
      set_fact:
        epg_image: "epgstation"
        epg_version: "{{ epg_dockerfile.stat.checksum }}"

    - name: Build image of EPGStation with ffmpeg
      become: yes
      docker_image:
        name: "{{ epg_image }}:{{ epg_version }}"
        build:
          path: "{{ epg_base_dir }}/build/"
        source: build

- name: EPGStation container is started
  become: yes
  docker_container:
    name: epgstation
    image: "{{ epg_image }}:{{ epg_version }}"
    networks:
      - name: "{{ epg_mirakurun_network }}"
    ports:
      - "{{ epg_port }}:{{ epg_port }}"
      - "{{ epg_port + 1 }}:{{ epg_port + 1 }}"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{ epg_base_dir }}/config:/app/config"
      - "{{ epg_base_dir }}/data:/app/data"
      - "{{ epg_base_dir }}/thumbnail:/app/thumbnail"
      - "{{ epg_base_dir }}/logs:/app/logs"
      - "{{ epg_recorded_path }}:/app/recorded"
    env:
      TZ: "Asia/Tokyo"
    restart_policy: unless-stopped
    user: "{{ epg_user_uid }}:{{ epg_user_gid }}"
    container_default_behavior: compatibility

